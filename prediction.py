# -*- coding: utf-8 -*-
"""Untitled11.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ajdUPc0OeGYRKLIwaIZyFjn6iX2sGLH1
"""

# -*- coding: utf-8 -*-
import pandas as pd
import pickle

# Memuat model yang sudah dilatih
try:
    with open('Model/rf_model.pkl', 'rb') as file:
        model = pickle.load(file)
    print("Model dimuat berhasil!")
except FileNotFoundError:
    print("File model/rf_model.pkl tidak ditemukan. Pastikan file ada di direktori 'model' atau sesuaikan path.")
    exit()
except Exception as e:
    print(f"Error memuat model: {e}")
    exit()

# Daftar fitur yang diperlukan untuk prediksi
features = ['Age', 'BusinessTravel', 'DailyRate', 'Department', 'DistanceFromHome',
            'Education', 'EducationField', 'EnvironmentSatisfaction', 'Gender',
            'HourlyRate', 'JobInvolvement', 'JobLevel', 'JobRole',
            'JobSatisfaction', 'MaritalStatus', 'MonthlyIncome', 'NumCompaniesWorked',
            'OverTime', 'PercentSalaryHike', 'PerformanceRating',
            'RelationshipSatisfaction', 'StockOptionLevel', 'TotalWorkingYears',
            'TrainingTimesLastYear', 'WorkLifeBalance', 'YearsAtCompany',
            'YearsInCurrentRole', 'YearsSinceLastPromotion', 'YearsWithCurrManager']

# Meminta input dari pengguna
print("Masukkan data karyawan untuk prediksi Attrition:")
data = {}
for feature in features:
    while True:
        if feature == 'BusinessTravel':
            print(f"Masukkan {feature} (0=Rarely, 1=Frequently, 2=Non-Travel):")
        elif feature == 'Department':
            print(f"Masukkan {feature} (0=HR, 1=R&D, 2=Sales):")
        elif feature == 'EducationField':
            print(f"Masukkan {feature} (0=HR, 1=Life Sciences, 2=Marketing, 3=Medical, 4=Other, 5=Technical Degree):")
        elif feature == 'Gender':
            print(f"Masukkan {feature} (0=Female, 1=Male):")
        elif feature == 'JobRole':
            print(f"Masukkan {feature} (0=HR, 1=Healthcare Rep, 2=Lab Technician, 3=Manager, 4=Manufacturing Director, 5=Research Director, 6=Research Scientist, 7=Sales Executive, 8=Sales Rep):")
        elif feature == 'MaritalStatus':
            print(f"Masukkan {feature} (0=Divorced, 1=Married, 2=Single):")
        elif feature == 'OverTime':
            print(f"Masukkan {feature} (0=No, 1=Yes):")
        else:
            print(f"Masukkan {feature}:")
        user_input = input()
        if user_input.strip():  # Cek kalau input tidak kosong
            try:
                data[feature] = float(user_input)
                break
            except ValueError:
                print(f"Input untuk {feature} harus angka. Coba lagi!")
        else:
            print(f"Input untuk {feature} tidak boleh kosong. Coba lagi!")

# Membuat DataFrame dari input
input_df = pd.DataFrame([data])

# Melakukan prediksi
try:
    prediction = model.predict(input_df)
    print("\nHasil Prediksi:")
    print("Karyawan diprediksi akan KELUAR" if prediction[0] == 1 else "Karyawan diprediksi akan TAHAN")
except Exception as e:
    print(f"Error saat prediksi: {e}")